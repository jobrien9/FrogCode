#include <DS18B20.h>
#include <math.h>

//NOTE: This code had to be flashed to the device via the online IDE - there doesn't appear to be a way to 
//Firmware for a RedBear DUO board to control a 4 Relay Module, which turns the lights on a poison dart frog vivarium on and off
//JJ OBrien - Nov 2019

//sample API request to turn lights on: POST https://api.particle.io/v1/devices/[DEVICE ID]/toggleLight?access_token=[ACCESS_TOKEN]

#define FROG_LIGHT_PIN1 D0
#define FROG_LIGHT_PIN2 D1

#define THERMOMETER_PIN D3
#define MILLIS_PER_SAMPLE 10000

bool lightsOn = false;
//global variable to track the latest temperature in F
float temperature = -900;

DS18B20 ds18b20(THERMOMETER_PIN, true);


void setup() {
     pinMode(FROG_LIGHT_PIN1, OUTPUT);
     pinMode(FROG_LIGHT_PIN2, OUTPUT);
     pinMode(THERMOMETER_PIN, INPUT);
     //if HIGH, the lights will be off, if low, then on
     digitalWrite(FROG_LIGHT_PIN1, HIGH);
     digitalWrite(FROG_LIGHT_PIN2, HIGH);
     //this exposes the toggleLight function to the outside world
     Particle.function("toggleLight", toggleLight);
     Particle.function("getTemp", getTemp);
     Particle.function("isLightOn", isLightOn);
}

void loop() {
    delay(MILLIS_PER_SAMPLE);
    float sampleTemp = ds18b20.getTemperature();
    if (sampleTemp > -900){
        temperature = convertToFahrenheit(sampleTemp);
    } else {
        //I want to make sure that old readings don't become stagnant if we get frequent bad readings
        temperature = -900;
    }
}


//toggles the lights (by controlling the relay) and returns 1 to let you know if lights are on and 0 to let you know they are off
int toggleLight(String incoming) {
    if (lightsOn){
        digitalWrite(FROG_LIGHT_PIN1, HIGH);
        digitalWrite(FROG_LIGHT_PIN2, HIGH);
    }else{
        digitalWrite(FROG_LIGHT_PIN1, LOW);
        digitalWrite(FROG_LIGHT_PIN2, LOW);
    }
    
    lightsOn = !lightsOn;
    
    //return the status of the lights 
    return (int)lightsOn;
}

//returns the temperature in Fahrenheit
int getTemp(String incoming){
    return round(temperature);
}

//1 if true, 0 if false
int isLightOn(String incoming){
    return (int)lightsOn;
}


//helper function to convert to Fahrenheit
float convertToFahrenheit(float celsius){
    return (celsius * 1.8) + 32;
}

